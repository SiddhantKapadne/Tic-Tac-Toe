{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helper.js","App.js","reportWebVitals.js","index.js"],"names":["Square","value","onClick","style","className","Borad","sqaures","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xo","data-text","color","setTimeout","swal","background","textShadow","button","text","historyPoint","slice","current","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAeeA,EAbA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAEfC,EAAQF,EAAK,kBAAcA,GAAd,UAEnB,OACI,8BACI,wBAAQG,UAAWD,EAAOD,QAASA,EAAnC,SACKD,OCOFI,EAbD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASJ,EAAc,EAAdA,QACtB,OACI,qBAAKE,UAAU,QAAf,SACKE,EAAQC,KAAI,SAACC,EAAQC,GAClB,OACI,cAAC,EAAD,CAAgBR,MAAOO,EAAQN,QAAS,kBAAKA,EAAQO,KAAxCA,SCgDlBC,EAnDF,WAAO,IAAD,EACeC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADvC,mBACRC,EADQ,KACCC,EADD,OAEqBJ,mBAAS,GAF9B,mBAERK,EAFQ,KAEIC,EAFJ,OAGeN,oBAAS,GAHxB,mBAGRO,EAHQ,KAGCC,EAHD,KAITC,ECTH,SAAyBd,GAW5B,IAVA,IAAMe,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEHZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cAChBY,EAAMZ,GADU,GAC3Bc,EAD2B,KACxBC,EADwB,KACrBC,EADqB,KAElC,GAAGnB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACjE,OAAOnB,EAAQiB,GAGvB,OAAO,KDRQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IA+B3B,OACI,sBAAKd,UAAU,WAAf,UACI,oBAAIA,UAAU,QAAQwB,YAAU,cAAhC,yBACA,oBAAIzB,MAAO,CAAC0B,MAAO,QAAnB,SAA6BT,OAlBjCU,YAAW,WACPC,IACI,qBAAK5B,MAAO,CAAC6B,WAAY,QAAzB,SACI,qBAAI7B,MAAO,CAAC8B,WAAY,qCAAsCJ,MAAO,WAArE,yBAA8FT,OAC1F,CACJc,OAAQ,CACJC,KAAM,QACN/B,UAAW,aAKxB,KAMuD,eAAiBuB,IACvE,cAAC,EAAD,CAAOrB,QAASQ,EAAQE,GAAad,QAjCzB,SAACO,GACjB,IAAM2B,EAAetB,EAAQuB,MAAM,EAAGrB,EAAa,GAC7CsB,EAAUF,EAAapB,GACvBV,EAAO,YAAOgC,GAEjBlB,GAAUd,EAAQG,KAErBH,EAAQG,GAAKkB,EACbZ,EAAW,GAAD,mBAAKqB,GAAL,CAAmB9B,KAC7BW,EAAcmB,EAAad,QAC3BH,GAAYD,OAwBR,8BACI,wBAAQd,UAAU,QAAQF,QAAS,kBAAMe,EAAc,IAAvD,0BEpCDsB,MARf,WACE,OACE,qBAAKnC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.66b59f7b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = ({ value, onClick }) => {\n\n    const style = value ? `squares ${value}` : `squares`;\n\n    return(\n        <div>\n            <button className={style} onClick={onClick}>\n                {value}\n            </button>\n        </div>\n    );\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nconst Borad = ({ sqaures, onClick }) => {\n    return(\n        <div className=\"board\">\n            {sqaures.map((square, i) => {\n                return(\n                    <Square key={i} value={square} onClick={()=> onClick(i)}>\n                    </Square>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Borad;","import React, { useState } from 'react';\nimport { calculateWinner } from '../helper';\nimport swal from '@sweetalert/with-react';\nimport Borad from './Board';\n\nconst Game = () => {\n    const [history, setHistory] = useState([Array(9).fill(null)])\n    const [stepNumber, setStepNumber] = useState(0);\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(history[stepNumber]);\n    const xo = xIsNext ? \"X\" : \"O\";\n\n    const handleClick = (i) => {\n        const historyPoint = history.slice(0, stepNumber + 1);\n        const current = historyPoint[stepNumber];\n        const sqaures = [...current];\n\n        if(winner || sqaures[i]) return;\n\n        sqaures[i] = xo;\n        setHistory([...historyPoint, sqaures]);\n        setStepNumber(historyPoint.length);\n        setXisNext(!xIsNext);\n    };\n\n    const winnerPopUp = () => {\n        setTimeout(() => {\n            swal(\n                <div style={{background: '#fff'}}>\n                    <h1 style={{textShadow: '1px 1px 0px #50DFFB, 0px 1px 90px ', color: '#474747'}}>Winner is : {winner}</h1>\n                </div>, {\n                    button: {\n                        text: \"Close\",\n                        className: \"close\"\n                    },\n                    \n                }\n            )\n        }, 420);\n    }\n\n    return(\n        <div className=\"gameArea\">\n            <h1 className=\"title\" data-text=\"Tic-Tac-Toe\">Tic-Tac-Toe</h1>\n            <h3 style={{color: '#fff'}}>{winner ? winnerPopUp() : \"Next Player:\" + xo}</h3>\n            <Borad sqaures={history[stepNumber]} onClick={handleClick} />\n            <div>\n                <button className=\"reset\" onClick={() => setStepNumber(0)}>\n                    Reset_\n                </button>\n            </div>\n\n        </div>\n    )\n};\n\nexport default Game;\n\n\n//  For Future Perpose\n\n\n\n    // const jumpTo = (step) => {\n    //     setStepNumber(step);\n    //     setXisNext(step % 2 === 0);\n    // }\n\n    // const renderMoves = () => {\n    //     history.map((_step, move) => {\n    //         if(move === 0) {\n    //             return(\n    //                 <div key={move}>\n    //                     <button onClick={() => jumpTo(move)}>Reset</button>\n    //                 </div>\n    //             )\n    //         }\n    //         return move;\n    //         // const destination = move ? `Go to move: ${move}` : \"Go to Start\";\n    //         // const destination = 0 ? \"Reset\" : \"Reset\";\n    //         console.log(move);\n    //         // return(\n    //         //     <li key={move}>\n    //         //         <button onClick={() => jumpTo(move)}>{destination}</button>\n    //         //     </li>\n    //         // )\n    //     })\n    // }","export function calculateWinner(sqaures) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n      ];\n    for(let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if(sqaures[a] && sqaures[a] === sqaures[b] && sqaures[a] === sqaures[c]) {\n            return sqaures[a];\n        }\n    }\n    return null;\n}","import './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}